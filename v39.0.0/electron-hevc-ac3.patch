diff --git a/BUILD.gn b/BUILD.gn
index c27602f164..90f584646d 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -1439,9 +1439,11 @@ dist_zip("electron_dist_zip") {
         ":strip_electron_binary",
         ":strip_libEGL_shlib",
         ":strip_libGLESv2_shlib",
-        ":strip_libffmpeg_shlib",
         ":strip_libvk_swiftshader_shlib",
       ]
+      if (is_component_ffmpeg) {
+        data_deps += [ ":strip_libffmpeg_shlib" ]
+      }
     }
 
     data_deps += [ "//sandbox/linux:chrome_sandbox" ]
@@ -1493,11 +1495,13 @@ dist_zip("electron_mksnapshot_zip") {
     data_deps += [
       ":strip_libEGL_shlib",
       ":strip_libGLESv2_shlib",
-      ":strip_libffmpeg_shlib",
       ":strip_libvk_swiftshader_shlib",
       ":strip_mksnapshot_binary",
       ":strip_v8_context_snapshot_generator_binary",
     ]
+    if (is_component_ffmpeg) {
+      data_deps += [ ":strip_libffmpeg_shlib" ]
+    }
   }
   deps = data_deps
   outputs = [ "$root_build_dir/mksnapshot.zip" ]
@@ -1683,11 +1687,13 @@ if (is_linux && is_official_build) {
     deps = [ "//third_party/angle:libGLESv2" ]
   }
 
-  strip_binary("strip_libffmpeg_shlib") {
-    binary_input = "$root_out_dir/libffmpeg.so"
-    symbol_output = "$root_out_dir/debug/libffmpeg.so.debug"
-    compress_debug_sections = true
-    deps = [ "//third_party/ffmpeg" ]
+  if (is_component_ffmpeg) {
+    strip_binary("strip_libffmpeg_shlib") {
+     binary_input = "$root_out_dir/libffmpeg.so"
+     symbol_output = "$root_out_dir/debug/libffmpeg.so.debug"
+      compress_debug_sections = true
+      deps = [ "//third_party/ffmpeg" ]
+    }
   }
 
   strip_binary("strip_libvk_swiftshader_shlib") {
diff --git a/build/args/release.gn b/build/args/release.gn
index 77351cc181..60dadc6a2a 100644
--- a/build/args/release.gn
+++ b/build/args/release.gn
@@ -2,8 +2,21 @@ import("//electron/build/args/all.gn")
 is_component_build = false
 is_official_build = true
 
+enable_hevc_parser_and_hw_decoder=true
+enable_platform_ac3_eac3_audio=true
+enable_platform_dolby_vision=true
+enable_platform_mpeg_h_audio=true
+enable_platform_ac4_audio=true
+enable_platform_dts_audio=true
+enable_platform_hevc=true
+ffmpeg_branding="Chrome"
+proprietary_codecs=true
+blink_symbol_level=0
+v8_symbol_level=0
+symbol_level=0
+
 # By default, Electron builds ffmpeg with proprietary codecs enabled. In order
 # to facilitate users who don't want to ship proprietary codecs in ffmpeg, or
 # who have an LGPL requirement to ship ffmpeg as a dynamically linked library,
 # we build ffmpeg as a shared library.
-is_component_ffmpeg = true
+is_component_ffmpeg = false
